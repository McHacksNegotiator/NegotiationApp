{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alger\\\\OneDrive\\\\Documents\\\\Projects\\\\McHacks 12\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = AgoraRTC.createClient({\n  mode: \"rtc\",\n  codec: \"vp8\"\n});\n\n// Hardcoded values\nconst appId = \"c53554d82fbd4a07b394bcc22ccd2b1e\";\nconst token = \"007eJxTYGDVemwjNPX/vU2byrRyzn56kpTE/tI27NAFPl6Bk/Nz5+UqMCSbGpuamqRYGKUlpZgkGpgnGVuaJCUnGxklJ6cYJRmmxu+Ymt4QyMhw2EmRmZEBAkF8bobkjMS8vNQcv8TcVAYGAFr5IpQ=\";\nexport default function App() {\n  _s();\n  const [channelName, setChannelName] = useState(\"channelName\");\n  const [clientUID, setClientUID] = useState(1234); // The \"client\" user\n  const [agentUID, setAgentUID] = useState(9999); // The AI agent UID\n  const [loading, setLoading] = useState(false);\n  const [agentRunning, setAgentRunning] = useState(false);\n\n  // Client data for negotiation\n  const [clientName, setClientName] = useState(\"Jane Doe\");\n  const [clientDOB, setClientDOB] = useState(\"1990-01-01\");\n  const [clientAddress, setClientAddress] = useState(\"123 Main St\");\n  const [clientAccount, setClientAccount] = useState(\"ACC123456\");\n  useEffect(() => {\n    // Automatically join the channel as a normal user so we can hear\n    (async () => {\n      try {\n        await client.join(appId, channelName, token, clientUID);\n        client.on(\"user-published\", async (user, mediaType) => {\n          await client.subscribe(user, mediaType);\n          if (mediaType === \"audio\") user.audioTrack.play();\n        });\n        client.on(\"user-unpublished\", user => {\n          console.log(\"User unpublished:\", user.uid);\n        });\n        console.log(\"Client joined channel:\", channelName);\n      } catch (err) {\n        console.error(\"Failed to join channel:\", err);\n        alert(\"Failed to join channel. Please check the console for more details.\");\n      }\n    })();\n\n    // Cleanup on unmount\n    return () => {\n      if (agentRunning) {\n        stopAgent();\n      }\n    };\n  }, [agentRunning, channelName, clientUID]);\n  const startAgent = async () => {\n    setLoading(true);\n    try {\n      const serverUrl = \"http://localhost:8080\"; // Replace <container_ip> with the actual IP address of the container\n      const resp = await axios.post(`${serverUrl}/start_agent`, {\n        channel_name: channelName,\n        uid: parseInt(agentUID),\n        // Ensure uid is sent as an integer\n        language: \"en\",\n        system_instruction: \"\",\n        voice: \"alloy\",\n        client_data: {\n          name: clientName,\n          date_of_birth: clientDOB,\n          home_address: clientAddress,\n          account_number: clientAccount\n        },\n        client_name: clientName,\n        client_dob: clientDOB,\n        client_address: clientAddress,\n        client_account_number: clientAccount\n      });\n      console.log(resp.data);\n      alert(\"AI Agent started!\");\n      setAgentRunning(true);\n    } catch (err) {\n      console.error(\"Error details:\", err);\n      if (!err.response) {\n        console.error(\"Network error details:\", err);\n        alert(\"Network error: Please check your connection and try again.\");\n      } else if (err.response.status === 400) {\n        alert(\"Bad request: \" + err.response.data.error);\n        if (err.response.data.error.includes(\"OPENAI_API_KEY\")) {\n          console.error(\"Server missing OPENAI_API_KEY.\");\n          alert(\"Server missing OPENAI_API_KEY.\");\n        }\n      } else if (err.response.status === 500) {\n        alert(\"Server error: \" + err.response.data.error);\n      } else {\n        alert(\"Failed to start agent: \" + err.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const stopAgent = async () => {\n    setLoading(true);\n    try {\n      const serverUrl = \"http://localhost:8080\"; // Replace <container_ip> with the actual IP address of the container\n      const resp = await axios.post(`${serverUrl}/stop_agent`, {\n        channel_name: channelName\n      });\n      console.log(resp.data);\n      alert(\"AI Agent stopped.\");\n      setAgentRunning(false);\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to stop agent: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ISP Negotiation Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This demo app lets an AI agent join the channel and negotiate using OpenAI\\u2019s Realtime Voice.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Client UID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: clientUID,\n        onChange: e => setClientUID(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"AI Agent UID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: agentUID,\n        onChange: e => setAgentUID(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Client Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientName,\n        onChange: e => setClientName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"DOB: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientDOB,\n        onChange: e => setClientDOB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientAddress,\n        onChange: e => setClientAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account #: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientAccount,\n        onChange: e => setClientAccount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: agentRunning ? stopAgent : startAgent,\n      disabled: loading,\n      children: loading ? agentRunning ? \"Stopping AI Agent...\" : \"Starting AI Agent...\" : agentRunning ? \"Stop AI Agent\" : \"Start AI Agent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 20,\n        fontStyle: \"italic\"\n      },\n      children: \"**Say \\\"hold the call\\\" to the AI. The AI should politely ask the ISP agent to wait, then talk privately to the client. When you\\u2019re done, the AI says \\\"Thanks for waiting, let's continue.\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"oWfv6HzsFdglNKLz4Tri1NIyaCc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AgoraRTC","axios","jsxDEV","_jsxDEV","client","createClient","mode","codec","appId","token","App","_s","channelName","setChannelName","clientUID","setClientUID","agentUID","setAgentUID","loading","setLoading","agentRunning","setAgentRunning","clientName","setClientName","clientDOB","setClientDOB","clientAddress","setClientAddress","clientAccount","setClientAccount","join","on","user","mediaType","subscribe","audioTrack","play","console","log","uid","err","error","alert","stopAgent","startAgent","serverUrl","resp","post","channel_name","parseInt","language","system_instruction","voice","client_data","name","date_of_birth","home_address","account_number","client_name","client_dob","client_address","client_account_number","data","response","status","includes","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","Number","target","onClick","disabled","marginTop","fontStyle","_c","$RefreshReg$"],"sources":["C:/Users/alger/OneDrive/Documents/Projects/McHacks 12/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport axios from \"axios\";\r\n\r\nconst client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\r\n\r\n// Hardcoded values\r\nconst appId = \"c53554d82fbd4a07b394bcc22ccd2b1e\";\r\nconst token = \"007eJxTYGDVemwjNPX/vU2byrRyzn56kpTE/tI27NAFPl6Bk/Nz5+UqMCSbGpuamqRYGKUlpZgkGpgnGVuaJCUnGxklJ6cYJRmmxu+Ymt4QyMhw2EmRmZEBAkF8bobkjMS8vNQcv8TcVAYGAFr5IpQ=\";\r\n\r\nexport default function App() {\r\n    const [channelName, setChannelName] = useState(\"channelName\");\r\n    const [clientUID, setClientUID] = useState(1234); // The \"client\" user\r\n    const [agentUID, setAgentUID] = useState(9999);   // The AI agent UID\r\n    const [loading, setLoading] = useState(false);\r\n    const [agentRunning, setAgentRunning] = useState(false);\r\n\r\n    // Client data for negotiation\r\n    const [clientName, setClientName] = useState(\"Jane Doe\");\r\n    const [clientDOB, setClientDOB] = useState(\"1990-01-01\");\r\n    const [clientAddress, setClientAddress] = useState(\"123 Main St\");\r\n    const [clientAccount, setClientAccount] = useState(\"ACC123456\");\r\n\r\n    useEffect(() => {\r\n        // Automatically join the channel as a normal user so we can hear\r\n        (async () => {\r\n            try {\r\n                await client.join(appId, channelName, token, clientUID);\r\n                client.on(\"user-published\", async (user, mediaType) => {\r\n                    await client.subscribe(user, mediaType);\r\n                    if (mediaType === \"audio\") user.audioTrack.play();\r\n                });\r\n                client.on(\"user-unpublished\", user => {\r\n                    console.log(\"User unpublished:\", user.uid);\r\n                });\r\n                console.log(\"Client joined channel:\", channelName);\r\n            } catch (err) {\r\n                console.error(\"Failed to join channel:\", err);\r\n                alert(\"Failed to join channel. Please check the console for more details.\");\r\n            }\r\n        })();\r\n\r\n        // Cleanup on unmount\r\n        return () => {\r\n            if (agentRunning) {\r\n                stopAgent();\r\n            }\r\n        };\r\n    }, [agentRunning, channelName, clientUID]);\r\n\r\n    const startAgent = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const serverUrl = \"http://localhost:8080\"; // Replace <container_ip> with the actual IP address of the container\r\n            const resp = await axios.post(`${serverUrl}/start_agent`, {\r\n                channel_name: channelName,\r\n                uid: parseInt(agentUID), // Ensure uid is sent as an integer\r\n                language: \"en\",\r\n                system_instruction: \"\",\r\n                voice: \"alloy\",\r\n                client_data: {\r\n                    name: clientName,\r\n                    date_of_birth: clientDOB,\r\n                    home_address: clientAddress,\r\n                    account_number: clientAccount\r\n                },\r\n                client_name: clientName,\r\n                client_dob: clientDOB,\r\n                client_address: clientAddress,\r\n                client_account_number: clientAccount\r\n            });\r\n            console.log(resp.data);\r\n            alert(\"AI Agent started!\");\r\n            setAgentRunning(true);\r\n        } catch (err) {\r\n            console.error(\"Error details:\", err);\r\n            if (!err.response) {\r\n                console.error(\"Network error details:\", err);\r\n                alert(\"Network error: Please check your connection and try again.\");\r\n            } else if (err.response.status === 400) {\r\n                alert(\"Bad request: \" + err.response.data.error);\r\n                if (err.response.data.error.includes(\"OPENAI_API_KEY\")) {\r\n                    console.error(\"Server missing OPENAI_API_KEY.\");\r\n                    alert(\"Server missing OPENAI_API_KEY.\");\r\n                }\r\n            } else if (err.response.status === 500) {\r\n                alert(\"Server error: \" + err.response.data.error);\r\n            } else {\r\n                alert(\"Failed to start agent: \" + err.message);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const stopAgent = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const serverUrl = \"http://localhost:8080\"; // Replace <container_ip> with the actual IP address of the container\r\n            const resp = await axios.post(`${serverUrl}/stop_agent`, {\r\n                channel_name: channelName,\r\n            });\r\n            console.log(resp.data);\r\n            alert(\"AI Agent stopped.\");\r\n            setAgentRunning(false);\r\n        } catch (err) {\r\n            console.error(err);\r\n            alert(\"Failed to stop agent: \" + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <h1>ISP Negotiation Demo</h1>\r\n            <p>\r\n                This demo app lets an AI agent join the channel and negotiate using\r\n                OpenAI’s Realtime Voice.\r\n            </p>\r\n\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>Client UID: </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={clientUID}\r\n                    onChange={(e) => setClientUID(Number(e.target.value))}\r\n                />\r\n            </div>\r\n\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>AI Agent UID: </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={agentUID}\r\n                    onChange={(e) => setAgentUID(Number(e.target.value))}\r\n                />\r\n            </div>\r\n\r\n            <h2>Client Data</h2>\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>Name: </label>\r\n                <input\r\n                    value={clientName}\r\n                    onChange={(e) => setClientName(e.target.value)} />\r\n            </div>\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>DOB: </label>\r\n                <input\r\n                    value={clientDOB}\r\n                    onChange={(e) => setClientDOB(e.target.value)} />\r\n            </div>\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>Address: </label>\r\n                <input\r\n                    value={clientAddress}\r\n                    onChange={(e) => setClientAddress(e.target.value)}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>Account #: </label>\r\n                <input\r\n                    value={clientAccount}\r\n                    onChange={(e) => setClientAccount(e.target.value)} />\r\n            </div>\r\n\r\n            <hr />\r\n            <button onClick={agentRunning ? stopAgent : startAgent} disabled={loading}>\r\n                {loading\r\n                    ? (agentRunning ? \"Stopping AI Agent...\" : \"Starting AI Agent...\")\r\n                    : (agentRunning ? \"Stop AI Agent\" : \"Start AI Agent\")}\r\n            </button>\r\n\r\n            <p style={{ marginTop: 20, fontStyle: \"italic\" }}>\r\n                **Say \"hold the call\" to the AI. The AI should politely ask the ISP agent to wait,\r\n                then talk privately to the client. When you’re done, the AI says \"Thanks for waiting, let's continue.\"\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}