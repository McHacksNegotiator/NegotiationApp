{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alger\\\\OneDrive\\\\Documents\\\\Projects\\\\McHacks 12\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = AgoraRTC.createClient({\n  mode: \"live\",\n  codec: \"vp8\"\n});\nexport default function App() {\n  _s();\n  const [channelName, setChannelName] = useState(process.env.REACT_APP_AGORA_CHANNEL_NAME || \"channelName\");\n  const [clientUID, setClientUID] = useState(1234); // The \"client\" user\n  const [agentUID, setAgentUID] = useState(9999); // The AI agent UID\n  const [appId, setAppId] = useState(process.env.REACT_APP_AGORA_APP_ID || \"c53554d82fbd4a07b394bcc22ccd2b1e\");\n  const [loading, setLoading] = useState(false);\n  const [agentRunning, setAgentRunning] = useState(false);\n\n  // Client data for negotiation\n  const [clientName, setClientName] = useState(\"Jane Doe\");\n  const [clientDOB, setClientDOB] = useState(\"1990-01-01\");\n  const [clientAddress, setClientAddress] = useState(\"123 Main St\");\n  const [clientAccount, setClientAccount] = useState(\"ACC123456\");\n  useEffect(() => {\n    // Show OpenAI API key in a popup when the website is accessed\n    const openaiApiKey = process.env.REACT_APP_OPENAI_API_KEY || \"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\";\n    alert(`OpenAI API Key: ${openaiApiKey}`);\n\n    // Cleanup on unmount\n    return () => {\n      if (agentRunning) {\n        stopAgent();\n      }\n    };\n  }, [agentRunning]);\n  const startAgent = async () => {\n    setLoading(true);\n    try {\n      // Check if the server URL is reachable\n      const serverUrl = \"http://localhost:8080\"; // Replace <container_ip> with the actual IP address of the container\n      try {\n        await axios.get(serverUrl);\n      } catch (err) {\n        throw new Error(`Server not reachable: ${serverUrl}`);\n      }\n      const resp = await axios.post(`${serverUrl}/start_agent`, {\n        channel_name: channelName,\n        uid: parseInt(agentUID),\n        // Ensure uid is sent as an integer\n        language: \"en\",\n        system_instruction: \"\",\n        voice: \"alloy\",\n        client_data: {\n          name: clientName,\n          date_of_birth: clientDOB,\n          home_address: clientAddress,\n          account_number: clientAccount\n        },\n        client_name: clientName,\n        client_dob: clientDOB,\n        client_address: clientAddress,\n        client_account_number: clientAccount\n      });\n      console.log(resp.data);\n      alert(\"AI Agent started!\");\n      setAgentRunning(true);\n    } catch (err) {\n      console.error(\"Error details:\", err);\n      if (!err.response) {\n        console.error(\"Network error details:\", err);\n        alert(\"Network error: Please check your connection and try again.\");\n      } else if (err.response.status === 400) {\n        alert(\"Bad request: \" + err.response.data.error);\n        if (err.response.data.error.includes(\"OPENAI_API_KEY\")) {\n          console.error(\"Server missing OPENAI_API_KEY.\");\n          alert(\"Server missing OPENAI_API_KEY.\");\n        }\n      } else if (err.response.status === 500) {\n        alert(\"Server error: \" + err.response.data.error);\n      } else {\n        alert(\"Failed to start agent: \" + err.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const stopAgent = async () => {\n    setLoading(true);\n    try {\n      const resp = await axios.post(\"http://localhost:8080/stop_agent\", {\n        // Replace <container_ip> with the actual IP address of the container\n        channel_name: channelName\n      });\n      console.log(resp.data);\n      alert(\"AI Agent stopped.\");\n      setAgentRunning(false);\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to stop agent: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ISP Negotiation Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This demo app lets an AI agent join the channel and negotiate using OpenAI\\u2019s Realtime Voice.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Client UID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: clientUID,\n        onChange: e => setClientUID(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"AI Agent UID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: agentUID,\n        onChange: e => setAgentUID(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Client Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientName,\n        onChange: e => setClientName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"DOB: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientDOB,\n        onChange: e => setClientDOB(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientAddress,\n        onChange: e => setClientAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Account #: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientAccount,\n        onChange: e => setClientAccount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: agentRunning ? stopAgent : startAgent,\n      disabled: loading,\n      children: loading ? agentRunning ? \"Stopping AI Agent...\" : \"Starting AI Agent...\" : agentRunning ? \"Stop AI Agent\" : \"Start AI Agent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 20,\n        fontStyle: \"italic\"\n      },\n      children: \"**Say \\\"hold the call\\\" to the AI. The AI should politely ask the ISP agent to wait, then talk privately to the client. When you\\u2019re done, the AI says \\\"Thanks for waiting, let's continue.\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"YY0MVRPTNBh9zN+p2NUlDblc5mE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AgoraRTC","axios","jsxDEV","_jsxDEV","client","createClient","mode","codec","App","_s","channelName","setChannelName","process","env","REACT_APP_AGORA_CHANNEL_NAME","clientUID","setClientUID","agentUID","setAgentUID","appId","setAppId","REACT_APP_AGORA_APP_ID","loading","setLoading","agentRunning","setAgentRunning","clientName","setClientName","clientDOB","setClientDOB","clientAddress","setClientAddress","clientAccount","setClientAccount","openaiApiKey","REACT_APP_OPENAI_API_KEY","alert","stopAgent","startAgent","serverUrl","get","err","Error","resp","post","channel_name","uid","parseInt","language","system_instruction","voice","client_data","name","date_of_birth","home_address","account_number","client_name","client_dob","client_address","client_account_number","console","log","data","error","response","status","includes","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","Number","target","onClick","disabled","marginTop","fontStyle","_c","$RefreshReg$"],"sources":["C:/Users/alger/OneDrive/Documents/Projects/McHacks 12/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport axios from \"axios\";\r\n\r\nconst client = AgoraRTC.createClient({ mode: \"live\", codec: \"vp8\" });\r\n\r\nexport default function App() {\r\n    const [channelName, setChannelName] = useState(process.env.REACT_APP_AGORA_CHANNEL_NAME || \"channelName\");\r\n    const [clientUID, setClientUID] = useState(1234); // The \"client\" user\r\n    const [agentUID, setAgentUID] = useState(9999);   // The AI agent UID\r\n    const [appId, setAppId] = useState(process.env.REACT_APP_AGORA_APP_ID || \"c53554d82fbd4a07b394bcc22ccd2b1e\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [agentRunning, setAgentRunning] = useState(false);\r\n\r\n    // Client data for negotiation\r\n    const [clientName, setClientName] = useState(\"Jane Doe\");\r\n    const [clientDOB, setClientDOB] = useState(\"1990-01-01\");\r\n    const [clientAddress, setClientAddress] = useState(\"123 Main St\");\r\n    const [clientAccount, setClientAccount] = useState(\"ACC123456\");\r\n\r\n    useEffect(() => {\r\n        // Show OpenAI API key in a popup when the website is accessed\r\n        const openaiApiKey = process.env.REACT_APP_OPENAI_API_KEY || \"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\";\r\n        alert(`OpenAI API Key: ${openaiApiKey}`);\r\n\r\n        // Cleanup on unmount\r\n        return () => {\r\n            if (agentRunning) {\r\n                stopAgent();\r\n            }\r\n        };\r\n    }, [agentRunning]);\r\n\r\n    const startAgent = async () => {\r\n        setLoading(true);\r\n        try {\r\n            // Check if the server URL is reachable\r\n            const serverUrl = \"http://localhost:8080\"; // Replace <container_ip> with the actual IP address of the container\r\n            try {\r\n                await axios.get(serverUrl);\r\n            } catch (err) {\r\n                throw new Error(`Server not reachable: ${serverUrl}`);\r\n            }\r\n\r\n            const resp = await axios.post(`${serverUrl}/start_agent`, {\r\n                channel_name: channelName,\r\n                uid: parseInt(agentUID), // Ensure uid is sent as an integer\r\n                language: \"en\",\r\n                system_instruction: \"\",\r\n                voice: \"alloy\",\r\n                client_data: {\r\n                    name: clientName,\r\n                    date_of_birth: clientDOB,\r\n                    home_address: clientAddress,\r\n                    account_number: clientAccount\r\n                },\r\n                client_name: clientName,\r\n                client_dob: clientDOB,\r\n                client_address: clientAddress,\r\n                client_account_number: clientAccount\r\n            });\r\n            console.log(resp.data);\r\n            alert(\"AI Agent started!\");\r\n            setAgentRunning(true);\r\n        } catch (err) {\r\n            console.error(\"Error details:\", err);\r\n            if (!err.response) {\r\n                console.error(\"Network error details:\", err);\r\n                alert(\"Network error: Please check your connection and try again.\");\r\n            } else if (err.response.status === 400) {\r\n                alert(\"Bad request: \" + err.response.data.error);\r\n                if (err.response.data.error.includes(\"OPENAI_API_KEY\")) {\r\n                    console.error(\"Server missing OPENAI_API_KEY.\");\r\n                    alert(\"Server missing OPENAI_API_KEY.\");\r\n                }\r\n            } else if (err.response.status === 500) {\r\n                alert(\"Server error: \" + err.response.data.error);\r\n            } else {\r\n                alert(\"Failed to start agent: \" + err.message);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const stopAgent = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const resp = await axios.post(\"http://localhost:8080/stop_agent\", { // Replace <container_ip> with the actual IP address of the container\r\n                channel_name: channelName,\r\n            });\r\n            console.log(resp.data);\r\n            alert(\"AI Agent stopped.\");\r\n            setAgentRunning(false);\r\n        } catch (err) {\r\n            console.error(err);\r\n            alert(\"Failed to stop agent: \" + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <h1>ISP Negotiation Demo</h1>\r\n            <p>\r\n                This demo app lets an AI agent join the channel and negotiate using\r\n                OpenAI’s Realtime Voice.\r\n            </p>\r\n\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>Client UID: </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={clientUID}\r\n                    onChange={(e) => setClientUID(Number(e.target.value))}\r\n                />\r\n            </div>\r\n\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>AI Agent UID: </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={agentUID}\r\n                    onChange={(e) => setAgentUID(Number(e.target.value))}\r\n                />\r\n            </div>\r\n\r\n            <h2>Client Data</h2>\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>Name: </label>\r\n                <input\r\n                    value={clientName}\r\n                    onChange={(e) => setClientName(e.target.value)} />\r\n            </div>\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>DOB: </label>\r\n                <input\r\n                    value={clientDOB}\r\n                    onChange={(e) => setClientDOB(e.target.value)} />\r\n            </div>\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>Address: </label>\r\n                <input\r\n                    value={clientAddress}\r\n                    onChange={(e) => setClientAddress(e.target.value)}\r\n                />\r\n            </div>\r\n            <div style={{ marginBottom: 10 }}>\r\n                <label>Account #: </label>\r\n                <input\r\n                    value={clientAccount}\r\n                    onChange={(e) => setClientAccount(e.target.value)} />\r\n            </div>\r\n\r\n            <hr />\r\n            <button onClick={agentRunning ? stopAgent : startAgent} disabled={loading}>\r\n                {loading\r\n                    ? (agentRunning ? \"Stopping AI Agent...\" : \"Starting AI Agent...\")\r\n                    : (agentRunning ? \"Stop AI Agent\" : \"Start AI Agent\")}\r\n            </button>\r\n\r\n            <p style={{ marginTop: 20, fontStyle: \"italic\" }}>\r\n                **Say \"hold the call\" to the AI. The AI should politely ask the ISP agent to wait,\r\n                then talk privately to the client. When you’re done, the AI says \"Thanks for waiting, let's continue.\"\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}